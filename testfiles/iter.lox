class Iter {
  next() { }
}

class Node {
  init(value, next) {
    this.value = value;
    this.child = next;
  }

  iter() {
    return NodeIter(this);
  }
}

class NodeIter < Iter {
  init(list) {
    this.current = list;
  }

  next() {
    if (this.current == nil) return nil;

    var value = this.current.value;
    this.current = this.current.child;

    return value;
  }
}

var start = clock();
var list = Node("H", Node("e", Node("l", Node("l", Node("o", nil)))));
var iter = list.iter();

print iter.next();
print iter.next();
print iter.next();
print iter.next();
print iter.next();
print iter.next();
var end = clock();

print end - start;
